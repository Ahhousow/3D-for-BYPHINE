/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 public/models/da.glb -T 
Files: public/models/da.glb [2.3MB] > D:\Melostud - InWork\Freelance\BYPHINE\Website\Dev\3D-for-BYPHINE\da-transformed.glb [156.31KB] (93%)
*/

import React from 'react'
import { useGLTF, Float } from '@react-three/drei'

export function Da(props) {
  const { nodes, materials } = useGLTF('http://localhost:5173/models/DA-TEXT.glb')
  return (
    <Float speed={1} rotationIntensity={2} floatIntensity={5} floatingRange={[0,1]}>
      <group {...props} dispose={null}>
        <mesh castShadow receiveShadow geometry={nodes.Pupille003.geometry} material={materials['Material_0.002']} position={[-2.785, 5.278, 1.555]} scale={0.069} />
        <mesh castShadow receiveShadow geometry={nodes.Sphere003.geometry} material={materials['Material_1.002']} position={[-0.969, 3.336, 2.18]} scale={[0.069, 0.069, 0.006]} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_0004.geometry} material={materials['Green-Ceramic']} scale={149.426} >
          <meshStandardMaterial color="#FE0000" metalness={0} roughness={0.2} opacity={1} transparent={false}/>
        </mesh>
        <mesh
        castShadow
        receiveShadow
        geometry={nodes['Text-1002'].geometry}
        material={materials.Pupil}
        position={[-12.829, -6.326, 0]}
        rotation={[-Math.PI / 2, 1.396, -Math.PI]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes['Text-2002'].geometry}
        material={materials.Pupil}
        position={[-0.981, -7.759, 0]}
        rotation={[-Math.PI / 2, -0.803, Math.PI]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes['Text-3002'].geometry}
        material={materials.Pupil}
        position={[-9.437, 17.767, -0.795]}
        rotation={[-Math.PI / 2, -Math.PI / 3, -Math.PI]}
      />
      </group>
    </Float>
  )
}

useGLTF.preload('http://localhost:5173/models/DA-TEXT.glb')
